version: "3.9"
services:
  zookeeper:
    image: quay.io/strimzi/kafka:latest-kafka-3.7.0
    command: ["sh","-c","bin/zookeeper-server-start.sh config/zookeeper.properties"]
    healthcheck:
      test: ["CMD-SHELL","echo ruok | nc -w 2 localhost 2181 | grep imok || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5

  kafka:
    image: quay.io/strimzi/kafka:latest-kafka-3.7.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    healthcheck:
      test: ["CMD","bash","-lc","/opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null"]
      interval: 10s
      timeout: 5s
      retries: 10

  minio:
    image: quay.io/minio/minio:latest
    command: ["server","/data","--console-address",":9001"]
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: adminadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - minio-data:/data

  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.25.9
    environment:
      QUERY_DEFAULTS_LIMIT: "20"
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD","wget","-q","http://localhost:8080/v1/.well-known/ready","-O","-"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - weaviate-data:/var/lib/weaviate

  dgraph:
    image: dgraph/standalone:latest
    ports:
      - "8080:8080"   # HTTP API
      - "9080:9080"   # gRPC API
      - "8000:8000"   # Admin UI (Ratel)
    volumes:
      - dgraph-data:/dgraph
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  airflow-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow-db:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 10

  airflow:
    image: apache/airflow:2.10.2-python3.11
    depends_on:
      - airflow-db
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@airflow-db:5432/airflow
      AIRFLOW__WEBSERVER__RBAC: "true"
      _PIP_ADDITIONAL_REQUIREMENTS: "apache-airflow-providers-http==4.6.1 requests==2.32.3"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
    command: >
      bash -c "
      airflow db migrate &&
      airflow users create --username admin --password admin --firstname a --lastname b --role Admin --email a@example.com || true &&
      airflow webserver &
      sleep 5 &&
      airflow scheduler
      "
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 20

  prometheus:
    image: prom/prometheus:v2.55.1
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD","wget","-q","http://localhost:9090/-/ready","-O","-"]
      interval: 10s
      timeout: 5s
      retries: 10

  grafana:
    image: grafana/grafana:11.2.0
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana-provisioning:/etc/grafana/provisioning:ro
    healthcheck:
      test: ["CMD","wget","-q","http://localhost:3000/api/health","-O","-"]
      interval: 10s
      timeout: 5s
      retries: 10

  loki:
    image: grafana/loki:3.1.1
    command: ["-config.file=/etc/loki/local-config.yaml"]
    volumes:
      - ./monitoring/loki-local-config.yaml:/etc/loki/local-config.yaml:ro
    ports:
      - "3100:3100"

  promtail:
    image: grafana/promtail:3.1.1
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/containers:/var/lib/containers:ro
      - ./monitoring/promtail.yml:/etc/promtail/config.yml:ro
    command: ["--config.file=/etc/promtail/config.yml"]

  ingestion:
    build: ./services/ingestion
    environment:
      KAFKA_BOOTSTRAP: kafka:9092
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: adminadmin
    depends_on:
      - kafka
      - minio
    ports:
      - "8011:8011"

  miner:
    build: ./services/miner
    environment:
      KAFKA_BOOTSTRAP: kafka:9092
    depends_on:
      - kafka
    ports:
      - "8012:8012"

  analyzer:
    build: ./services/analyzer
    environment:
      KAFKA_BOOTSTRAP: kafka:9092
    depends_on:
      - kafka
    ports:
      - "8013:8013"

  writer:
    build: ./services/writer
    environment:
      DGRAPH_URL: http://dgraph:8080
    depends_on:
      - dgraph
    ports:
      - "8014:8014"

  query-api:
    build: ./services/query-api
    environment:
      DGRAPH_URL: http://dgraph:8080
    depends_on:
      - dgraph
    ports:
      - "8015:8015"

  reporting:
    build: ./services/reporting
    environment:
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: admin
      MINIO_SECRET_KEY: adminadmin
      DGRAPH_URL: http://dgraph:8080
    depends_on:
      - minio
      - dgraph
    ports:
      - "8016:8016"

volumes:
  minio-data: {}
  weaviate-data: {}
  dgraph-data: {}
  airflow-db: {}
